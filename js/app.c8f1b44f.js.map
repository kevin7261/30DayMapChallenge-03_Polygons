{"version":3,"file":"js/app.c8f1b44f.js","mappings":"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","sources":["webpack://30DayMapChallenge-03_Polygons/./src/App.vue","webpack://30DayMapChallenge-03_Polygons/./src/App.vue?7ccd","webpack://30DayMapChallenge-03_Polygons/./src/views/HomeView.vue","webpack://30DayMapChallenge-03_Polygons/./src/tabs/MapTab.vue","webpack://30DayMapChallenge-03_Polygons/./src/stores/dataStore.js","webpack://30DayMapChallenge-03_Polygons/./src/stores/defineStore.js","webpack://30DayMapChallenge-03_Polygons/./src/tabs/MapTab.vue?15ab","webpack://30DayMapChallenge-03_Polygons/./src/views/HomeView.vue?1da1","webpack://30DayMapChallenge-03_Polygons/./src/router/index.js","webpack://30DayMapChallenge-03_Polygons/./src/main.js","webpack://30DayMapChallenge-03_Polygons/webpack/bootstrap","webpack://30DayMapChallenge-03_Polygons/webpack/runtime/chunk loaded","webpack://30DayMapChallenge-03_Polygons/webpack/runtime/compat get default export","webpack://30DayMapChallenge-03_Polygons/webpack/runtime/define property getters","webpack://30DayMapChallenge-03_Polygons/webpack/runtime/global","webpack://30DayMapChallenge-03_Polygons/webpack/runtime/hasOwnProperty shorthand","webpack://30DayMapChallenge-03_Polygons/webpack/runtime/jsonp chunk loading","webpack://30DayMapChallenge-03_Polygons/webpack/startup"],"sourcesContent":["<script>\n  /**\n   * 🏠 App.vue - 應用程式主組件\n   *\n   * 功能說明：\n   * 1. 🏗️ 提供應用程式整體框架和佈局結構\n   * 2. ⏳ 管理全域載入狀態和進度顯示\n   * 3. 🚀 管理 Vue Router 的路由導航系統\n   * 4. 📱 實現響應式滿版佈局，無邊距和空隙\n   *\n   * 架構說明：\n   * - 內容層：路由視圖容器，動態顯示不同頁面組件\n   *\n   * 設計理念：\n   * - 滿版無邊距佈局設計\n   * - 模組化組件架構\n   */\n\n  // 🔧 Vue Composition API 引入\n  import { ref } from 'vue';\n\n  export default {\n    name: 'App',\n\n    /**\n     * 🧩 組件註冊 (Component Registration)\n     * 註冊應用程式層級使用的組件\n     */\n    components: {},\n\n    /**\n     * 🔧 組件設定函數 (Component Setup)\n     * 使用 Composition API 設定應用程式層級的狀態管理\n     */\n    setup() {\n      // ⏳ 全域載入狀態管理 (Global Loading State Management)\n      /** ⏳ 是否顯示載入覆蓋層 */\n      const isLoading = ref(false);\n      /** 📝 載入文字提示 */\n      const loadingText = ref('載入中...');\n      /** 📊 載入進度百分比 (0-100) */\n      const loadingProgress = ref(0);\n      /** 📊 是否顯示進度條 */\n      const showLoadingProgress = ref(false);\n      /** 📝 載入子文字說明 */\n      const loadingSubText = ref('');\n\n      // 📤 返回響應式數據和函數給模板使用 (Return Reactive Data and Functions)\n      return {\n        // ⏳ 載入狀態\n        isLoading, // 載入狀態開關\n        loadingText, // 載入主要文字\n        loadingProgress, // 載入進度\n        showLoadingProgress, // 是否顯示進度條\n        loadingSubText, // 載入輔助文字\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 🏠 App.vue - 主應用程式組件 (Main Application Component) -->\n  <!-- 提供應用程式整體框架，使用 Bootstrap 實現滿版無空隙佈局 -->\n  <div id=\"app\" class=\"d-flex flex-column vh-100\">\n    <!-- 📱 主要內容區域 (Main Content Area) -->\n    <div class=\"d-flex flex-column overflow-hidden\">\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<style>\n  /**\n * 🎨 應用程式全域樣式 (Application Global Styles)\n *\n * 引入共用 CSS 並定義應用程式層級的樣式\n * 注意：大部分樣式已移至 common.css 中統一管理\n */\n\n  /* 📦 引入共用樣式表 (Import Common Stylesheets) */\n  @import './assets/css/common.css';\n\n  /* 📱 應用程式特定樣式 (App-Specific Styles) */\n  /* 其他樣式已整合至 common.css 中，避免重複定義 */\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=5744d3d4\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5744d3d4&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\n  /**\n   * 🏠 HomeView.vue - 主頁面組件 (Main Page Component)\n   *\n   * 這是應用程式的主頁面，整合了地圖顯示和控制面板。\n   * 主要功能：\n   * - 顯示世界城市地圖\n   * - 提供城市導航按鈕\n   * - 提供底圖切換功能\n   * - 響應式佈局設計\n   *\n   * 組件結構：\n   * - MapTab: 地圖顯示組件\n   * - 控制面板: 城市導航和底圖選擇\n   */\n\n  import MapTab from '../tabs/MapTab.vue';\n  import { useDataStore } from '@/stores/dataStore.js';\n  import { useDefineStore } from '@/stores/defineStore.js';\n  import { ref, onMounted, computed } from 'vue';\n\n  export default {\n    name: 'HomeView',\n    components: { MapTab },\n    setup() {\n      // 📦 存儲實例\n      const dataStore = useDataStore();\n      const defineStore = useDefineStore();\n\n      /**\n       * 🗺️ 設定地圖實例\n       * 將 Leaflet 地圖實例傳遞給 dataStore 以便城市導航使用\n       * @param {Object} map - Leaflet 地圖實例\n       */\n      const setMapInstance = (map) => dataStore.setMapInstance(map);\n\n      /**\n       * 🌍 導航到指定國家\n       * 將地圖視圖移動到選定國家的中心位置\n       * @param {string} countryId - 國家 ID\n       */\n      const navigateToCountry = (countryId) => {\n        // 更新當前國家名稱\n        const country = countries.value?.find((c) => c.layerId === countryId);\n        if (country) {\n          console.log('🌍 切換到國家:', country.layerName);\n          currentCountry.value = country.layerName;\n        }\n        dataStore.navigateToCountry(countryId);\n      };\n\n      // 移除底圖切換功能，使用預設的標準地圖\n\n      // 📊 獲取國家列表\n      const countries = computed(() => dataStore.layers[0].groupLayers);\n\n      // 🌍 當前選中的國家（預設為台灣）\n      const currentCountry = ref('TAIWAN');\n\n      // 🚀 初始化應用程式\n      onMounted(() => {\n        // 直接導航到台灣\n        navigateToCountry('Taiwan');\n      });\n\n      return {\n        setMapInstance,\n        navigateToCountry,\n        countries,\n        defineStore,\n        currentCountry,\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 🏠 主應用程式容器 -->\n  <div id=\"app\" class=\"d-flex flex-column vh-100\">\n    <!-- 🗺️ 地圖區域容器 -->\n    <div class=\"flex-grow-1 overflow-hidden position-relative\">\n      <!-- 🗺️ 地圖組件 -->\n      <MapTab @map-ready=\"setMapInstance\" :current-country=\"currentCountry\" />\n\n      <!-- 🎛️ 左側中間控制面板 -->\n      <div\n        class=\"position-absolute\"\n        style=\"top: 50%; left: 0; transform: translateY(-50%); z-index: 1000; padding: 1rem\"\n      >\n        <div class=\"bg-dark bg-opacity-75 rounded-3 p-3\">\n          <!-- 🌍 國家導航區域 -->\n          <div class=\"\">\n            <div class=\"d-flex flex-column gap-1\">\n              <button\n                v-for=\"country in countries\"\n                :key=\"country.layerId\"\n                class=\"btn border-0 my-country-btn my-font-sm-white px-4 py-3\"\n                :class=\"[currentCountry === country.layerName ? 'active' : '']\"\n                @click=\"navigateToCountry(country.layerId)\"\n              >\n                {{ country.layerName }}\n              </button>\n            </div>\n          </div>\n\n          <!-- 移除底圖選擇區域，使用預設的標準地圖 -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style>\n  @import '../assets/css/common.css';\n</style>\n","<script>\n  /**\n   * 🗺️ MapTab.vue - 簡化版地圖組件 (Simplified Map Component)\n   *\n   * 這是一個簡化的地圖組件，專為世界城市地圖展示設計。\n   * 主要功能：\n   * - 顯示世界六大城市的 GeoJSON 數據\n   * - 提供城市導航功能\n   * - 支援多種底圖切換\n   * - 響應式設計\n   *\n   * 技術架構：\n   * - Vue 3 Composition API\n   * - Leaflet 地圖庫\n   * - Pinia 狀態管理\n   * - Bootstrap 5 樣式\n   */\n\n  import { ref, onMounted, onUnmounted, watch, nextTick, computed } from 'vue';\n  import L from 'leaflet';\n  import 'leaflet/dist/leaflet.css';\n  import { useDataStore } from '@/stores/dataStore.js';\n  import { useDefineStore } from '@/stores/defineStore.js';\n\n  export default {\n    name: 'MapTab',\n    props: {\n      currentCountry: { type: String, default: '國家名稱' },\n    },\n    emits: ['map-ready'],\n    setup(props, { emit }) {\n      // 📦 存儲實例\n      const dataStore = useDataStore();\n      const defineStore = useDefineStore();\n\n      // 🗺️ 地圖相關變數\n      const mapContainer = ref(null);\n      let mapInstance = null;\n      let currentTileLayer = null;\n\n      // 🎛️ 地圖控制狀態\n      const isMapReady = ref(false);\n      const mapContainerId = ref(`leaflet-map-${Math.random().toString(36).substr(2, 9)}`);\n\n      // 📊 計算屬性：檢查是否有任何圖層可見（現在所有圖層都直接可見）\n      const isAnyLayerVisible = computed(() => dataStore.getAllLayers().length > 0);\n\n      // 🏙️ 當前國家信息\n      const currentCountryInfo = computed(() => {\n        if (!props.currentCountry) {\n          console.log('❌ currentCountryInfo: 沒有當前國家');\n          return null;\n        }\n\n        // 從dataStore中獲取國家信息\n        const allLayers = dataStore.getAllLayers();\n        console.log(\n          '🔍 查找國家:',\n          props.currentCountry,\n          '可用圖層:',\n          allLayers.map((l) => l.layerName)\n        );\n\n        const countryLayer = allLayers.find((layer) => layer.layerName === props.currentCountry);\n        if (countryLayer) {\n          console.log('✅ 找到國家圖層:', countryLayer.layerName);\n          return {};\n        } else {\n          console.log('❌ 未找到國家圖層:', props.currentCountry);\n          return null;\n        }\n      });\n\n      /**\n       * 🏗️ 創建地圖實例\n       * 初始化 Leaflet 地圖並設定基本配置\n       */\n      const createMap = () => {\n        if (!mapContainer.value) return false;\n\n        const rect = mapContainer.value.getBoundingClientRect();\n        if (rect.width === 0 || rect.height === 0) {\n          console.warn('[MapTab] 容器尺寸為零，延遲初始化');\n          return false;\n        }\n\n        try {\n          mapInstance = L.map(mapContainer.value, {\n            center: defineStore.mapView.center,\n            zoom: defineStore.mapView.zoom,\n            zoomControl: false,\n            attributionControl: false,\n            dragging: false, // 禁用拖拽\n            touchZoom: false, // 禁用觸控縮放\n            doubleClickZoom: false, // 禁用雙擊縮放\n            scrollWheelZoom: false, // 禁用滾輪縮放\n            boxZoom: false, // 禁用框選縮放\n            keyboard: false, // 禁用鍵盤控制\n          });\n\n          // 綁定地圖事件\n          mapInstance.on('zoomend', handleZoomEnd);\n          mapInstance.on('moveend', handleMoveEnd);\n\n          // 移除地圖點擊事件處理\n\n          // 設定 popup 面板的 z-index\n          mapInstance.getPane('popupPane').style.zIndex = 2200;\n\n          isMapReady.value = true;\n          emit('map-ready', mapInstance);\n\n          console.log('[MapTab] 地圖創建成功');\n          return true;\n        } catch (error) {\n          console.error('[MapTab] 地圖創建失敗:', error);\n          return false;\n        }\n      };\n\n      /**\n       * 📡 處理縮放結束事件\n       * 更新地圖視圖狀態到存儲中\n       */\n      const handleZoomEnd = () => {\n        if (mapInstance) {\n          const zoom = mapInstance.getZoom();\n          const center = mapInstance.getCenter();\n          defineStore.setMapView([center.lat, center.lng], zoom);\n          emit('update:zoomLevel', zoom);\n        }\n      };\n\n      /**\n       * 📡 處理移動結束事件\n       * 更新地圖中心座標\n       */\n      const handleMoveEnd = () => {\n        if (mapInstance) {\n          const center = mapInstance.getCenter();\n          defineStore.setMapView([center.lat, center.lng], mapInstance.getZoom());\n          emit('update:currentCoords', { lat: center.lat, lng: center.lng });\n        }\n      };\n\n      /**\n       * 🎨 設定底圖\n       * 根據存儲中的設定載入對應的底圖圖層\n       */\n      const setBasemap = () => {\n        if (!mapInstance) return;\n\n        // 移除現有底圖\n        if (currentTileLayer) {\n          mapInstance.removeLayer(currentTileLayer);\n        }\n\n        const config = defineStore.basemaps.find((b) => b.value === defineStore.selectedBasemap);\n\n        // 添加標準底圖圖層\n        if (config && config.url) {\n          currentTileLayer = L.tileLayer(config.url, {\n            attribution: '© OpenStreetMap contributors',\n            maxZoom: 18,\n          });\n          mapInstance.addLayer(currentTileLayer);\n        }\n\n        // 使用預設的透明背景，不設定任何特殊背景色\n      };\n\n      // 移除地圖標記功能，改為在 HTML 上顯示中心點\n\n      /**\n       * 🎯 高亮顯示特定要素\n       * 當用戶點擊地圖要素時高亮顯示\n       */\n      const highlightFeature = (feature) => {\n        // 重置所有圖層樣式\n        resetAllLayerStyles();\n\n        // 高亮選中的要素\n        if (feature && feature._leaflet_id) {\n          // 這裡可以添加高亮邏輯\n          console.log('高亮要素:', feature.properties.name);\n        }\n      };\n\n      /**\n       * 🔄 重置所有圖層樣式\n       * 清除所有高亮效果\n       */\n      const resetAllLayerStyles = () => {\n        // 這裡可以添加重置樣式的邏輯\n        console.log('重置圖層樣式');\n      };\n\n      /**\n       * 🔄 同步圖層（已移除標記功能）\n       * 不再在地圖上創建標記，改為在 HTML 上顯示\n       */\n      const syncLayers = () => {\n        // 移除地圖標記功能，不需要同步任何圖層\n        console.log('圖層同步已禁用，使用 HTML 中心點顯示');\n      };\n\n      /**\n       * 📏 刷新地圖尺寸\n       * 當容器大小改變時重新計算地圖尺寸\n       */\n      const invalidateSize = () => {\n        if (mapInstance) {\n          setTimeout(() => {\n            mapInstance.invalidateSize();\n          }, 100);\n        }\n      };\n\n      /**\n       * 🚀 初始化地圖\n       * 創建地圖並載入初始數據\n       */\n      const initMap = () => {\n        let attempts = 0;\n        const maxAttempts = 20;\n\n        const tryCreateMap = () => {\n          if (attempts >= maxAttempts) {\n            console.error('[MapTab] 地圖初始化失敗，已達到最大嘗試次數');\n            return;\n          }\n\n          attempts++;\n          console.log(`[MapTab] 嘗試創建地圖 (${attempts}/${maxAttempts})`);\n\n          if (createMap()) {\n            console.log('[MapTab] 地圖創建成功，開始初始化');\n            setBasemap();\n            syncLayers();\n          } else {\n            console.log('[MapTab] 地圖創建失敗，100ms 後重試');\n            setTimeout(tryCreateMap, 100);\n          }\n        };\n\n        tryCreateMap();\n      };\n\n      // 📏 設置 ResizeObserver 監聽容器大小變化\n      let resizeObserver = null;\n      let resizeTimeout = null;\n\n      const setupResizeObserver = () => {\n        if (!mapContainer.value || !window.ResizeObserver) return;\n\n        resizeObserver = new ResizeObserver(() => {\n          if (resizeTimeout) {\n            clearTimeout(resizeTimeout);\n          }\n\n          resizeTimeout = setTimeout(() => {\n            console.log('🔄 容器大小變化，刷新地圖');\n            invalidateSize();\n          }, 200);\n        });\n\n        resizeObserver.observe(mapContainer.value);\n        console.log('✅ ResizeObserver 已設置');\n      };\n\n      // 🧹 生命週期：組件掛載\n      onMounted(() => {\n        nextTick(() => {\n          initMap();\n          setupResizeObserver();\n        });\n      });\n\n      // 🧹 生命週期：組件卸載\n      onUnmounted(() => {\n        if (resizeTimeout) {\n          clearTimeout(resizeTimeout);\n        }\n\n        if (resizeObserver) {\n          resizeObserver.disconnect();\n        }\n\n        if (mapInstance) {\n          mapInstance.remove();\n          mapInstance = null;\n        }\n\n        currentTileLayer = null;\n        isMapReady.value = false;\n      });\n\n      // 👀 監聽器：監聽資料存儲中的圖層變化\n      watch(() => dataStore.layers, syncLayers, { deep: true });\n\n      // 👀 監聽器：監聽底圖變化\n      watch(\n        () => defineStore.selectedBasemap,\n        () => {\n          if (isMapReady.value) {\n            setBasemap();\n          }\n        }\n      );\n\n      // 📤 返回組件公開的屬性和方法\n      return {\n        mapContainer,\n        mapContainerId,\n        isAnyLayerVisible,\n        currentCountryInfo,\n        highlightFeature,\n        invalidateSize,\n        defineStore,\n      };\n    },\n  };\n</script>\n\n<template>\n  <!-- 🗺️ 地圖主容器 -->\n  <div id=\"map-container\" class=\"h-100 w-100 position-relative bg-transparent z-0\">\n    <!-- 🗺️ Leaflet 地圖容器 -->\n    <div :id=\"mapContainerId\" ref=\"mapContainer\" class=\"h-100 w-100\"></div>\n\n    <!-- 中心點顯示 -->\n    <div\n      class=\"position-absolute top-50 start-50 translate-middle\"\n      style=\"z-index: 1000; pointer-events: none\"\n    >\n      <div class=\"rounded-circle bg-white\" style=\"width: 4px; height: 4px\"></div>\n    </div>\n  </div>\n</template>\n\n<style>\n  @import '../assets/css/common.css';\n</style>\n","/**\n * 📦 數據存儲模組 (Data Store Module)\n *\n * 管理城市圖層數據和地圖導航功能\n * 使用 Pinia 狀態管理系統和 Vue 3 Composition API\n */\n\n// 核心依賴\nimport { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\n\n/**\n * 🏪 數據存儲商店定義 (Data Store Definition)\n *\n * 使用 Pinia 的 defineStore 創建一個名為 'data' 的狀態管理商店。\n * 採用 Composition API 語法，提供更好的 TypeScript 支援和代碼組織。\n *\n * @returns {Object} 包含所有狀態和方法的商店對象\n */\nexport const useDataStore = defineStore(\n  'data', // 商店唯一標識符\n  () => {\n    // 🎯 固定縮放級別常數\n    const COUNTRY_ZOOM_LEVEL = 17;\n    /**\n     * 🗺️ 圖層配置數據 (Layer Configuration Data)\n     *\n     * 定義所有可用的地圖圖層，採用分組結構組織，每個圖層包含完整的配置信息。\n     * 使用 ref 創建響應式數據，當圖層狀態改變時會自動更新相關 UI 組件。\n     *\n     * 📋 圖層結構說明：\n     * - groupName: 圖層組名稱，用於 UI 分組顯示\n     * - groupLayers: 該組下的所有圖層列表\n     *   - layerId: 圖層唯一標識符\n     *   - layerName: 圖層顯示名稱\n     *   - colorName: 圖層顏色名稱（對應 CSS 變數）\n     *   - geoJsonData: GeoJSON 格式的地理數據\n     *   - loader: 數據載入函數\n     *   - fileName: 數據文件路徑\n     *   - fieldName: 主要字段名稱\n     *   - center: 國家中心座標\n     *   - zoom: 縮放級別\n     */\n    const layers = ref([\n      {\n        // 🌍 世界國家地圖集合\n        // 包含各大洲代表性國家的座標點\n        groupName: '世界國家',\n        groupLayers: [\n          {\n            // 🏰 巴塞隆納聖家堂\n            layerId: 'Barcelona', // 圖層唯一標識符\n            layerName: 'BARCELONA', // 圖層顯示名稱\n            center: [2.1744, 41.4036], // 巴塞隆納聖家堂座標 [經度, 緯度]\n            zoom: 18, // 巴塞隆納縮放級別\n          },\n          {\n            // 🗽紐約紐約\n            layerId: 'New York', // 圖層唯一標識符\n            layerName: 'NEWYORK', // 圖層顯示名稱\n            center: [-73.991, 40.760694], // 紐約座標 [經度, 緯度] (40°45'38.5\"N 73°59'27.6\"W)\n            zoom: 17, // 紐約縮放級別\n          },\n        ],\n      },\n    ]);\n\n    /**\n     * 🔍 根據圖層 ID 查找圖層對象 (Find Layer by ID)\n     *\n     * 在分組結構的圖層配置中搜索指定 ID 的圖層，返回完整的圖層配置對象。\n     * 使用嵌套循環遍歷所有圖層組和圖層，確保能夠找到正確的圖層。\n     *\n     * @param {string} layerId - 要查找的圖層唯一標識符\n     * @returns {Object|null} 找到的圖層對象，如果未找到則返回 null\n     *\n     * @example\n     * const layer = findLayerById('安養機構');\n     * if (layer) {\n     *   console.log('找到圖層:', layer.layerName);\n     * }\n     */\n    const findLayerById = (layerId) => {\n      // 遍歷所有圖層組\n      for (const group of layers.value) {\n        // 遍歷當前組的所有圖層\n        for (const layer of group.groupLayers) {\n          // 檢查圖層 ID 是否匹配\n          if (layer.layerId === layerId) {\n            return layer; // 返回找到的圖層對象\n          }\n        }\n      }\n      return null; // 未找到指定 ID 的圖層\n    };\n\n    /**\n     * 📋 獲取所有圖層的扁平陣列 (Get All Layers as Flat Array)\n     *\n     * 將分組結構的圖層配置轉換為扁平的一維陣列，便於進行批量操作和遍歷。\n     * 使用展開運算符將每個圖層組的所有圖層合併到一個陣列中。\n     *\n     * @returns {Array} 包含所有圖層的扁平陣列\n     *\n     * @example\n     * const allLayers = getAllLayers();\n     * console.log('總共有', allLayers.length, '個圖層');\n     */\n    const getAllLayers = () => {\n      const allLayers = []; // 初始化結果陣列\n      // 遍歷所有圖層組\n      for (const group of layers.value) {\n        // 使用展開運算符將當前組的所有圖層添加到結果陣列\n        allLayers.push(...group.groupLayers);\n      }\n      return allLayers; // 返回扁平化的圖層陣列\n    };\n\n    /**\n     * 🔄 切換圖層可見性狀態 (Toggle Layer Visibility)\n     *\n     * 控制指定圖層的顯示/隱藏狀態，並在圖層首次顯示時自動載入相關數據。\n     * 這是圖層管理的核心方法，負責處理圖層狀態變更和數據載入邏輯。\n     *\n     * @param {string} layerId - 要切換狀態的圖層唯一標識符\n     * @returns {Promise<void>} 異步操作，無返回值\n     *\n     * @example\n     * // 切換安養機構圖層的顯示狀態\n     * await toggleLayerVisibility('安養機構');\n     */\n    // 移除圖層可見性切換（城市圖層永久可見，且無需勾選切換）\n\n    // 移除 GeoJSON 載入功能，現在直接使用座標點\n\n    // ------------------------------------------------------------\n    // 選中的地圖物件（用於清除選取狀態）\n    const selectedFeature = ref(null);\n\n    const setSelectedFeature = (feature) => {\n      selectedFeature.value = feature;\n    };\n\n    // ------------------------------------------------------------\n    // 地圖導航功能\n    const mapInstance = ref(null);\n\n    const setMapInstance = (map) => {\n      mapInstance.value = map;\n    };\n\n    /**\n     * 🌍 導航到指定國家\n     *\n     * 將地圖視圖移動到指定國家的中心位置\n     *\n     * @param {string} countryId - 國家圖層的唯一標識符\n     * @returns {void}\n     */\n    const navigateToCountry = (countryId) => {\n      // 查找國家圖層\n      const countryLayer = findLayerById(countryId);\n      if (!countryLayer) {\n        console.error('❌ 找不到國家圖層:', countryId);\n        return;\n      }\n\n      // 檢查地圖實例是否準備就緒\n      if (!mapInstance.value) {\n        console.error('❌ 地圖實例未準備就緒，等待地圖初始化...');\n        // 延遲重試機制\n        setTimeout(() => {\n          if (mapInstance.value) {\n            console.log('🌍 地圖已準備就緒，重新嘗試移動');\n            navigateToCountry(countryId);\n          } else {\n            console.error('❌ 地圖實例仍未準備就緒');\n          }\n        }, 1000);\n        return;\n      }\n\n      // 使用國家中心座標\n      const [lng, lat] = countryLayer.center;\n      const targetCenter = [lat, lng]; // Leaflet 需要 [lat, lng] 格式\n      const optimalZoom = countryLayer.zoom || COUNTRY_ZOOM_LEVEL; // 使用圖層自己的縮放級別，如果沒有則使用預設值\n\n      // 執行地圖導航\n      try {\n        mapInstance.value.setView(targetCenter, optimalZoom, { animate: false });\n        console.log(`🌍 成功導航到國家: ${countryLayer.layerName}`);\n      } catch (error) {\n        console.error('❌ 地圖導航失敗:', error);\n      }\n    };\n\n    return {\n      layers,\n      findLayerById, // 根據 ID 尋找圖層\n      getAllLayers, // 獲取所有圖層的扁平陣列\n      selectedFeature, // 選中的地圖要素\n      setSelectedFeature, // 設定選中的地圖要素\n      mapInstance, // 地圖實例\n      setMapInstance, // 設定地圖實例\n      navigateToCountry, // 導航到指定國家\n      // 所有圖層都是可見的，所以直接返回所有圖層\n      visibleLayers: computed(() => getAllLayers()),\n    };\n  },\n  {\n    persist: true,\n  }\n);\n","/**\n * 🗺️ 定義存儲模組 (Define Store Module)\n *\n * 管理應用程式的全局配置和設定，包括底圖選擇和地圖視圖狀態。\n * 主要功能：\n * - 管理底圖配置和選擇\n * - 保存地圖視圖狀態（中心點、縮放級別）\n * - 提供底圖切換功能\n *\n * 技術架構：\n * - Pinia 狀態管理\n * - 響應式狀態更新\n * - 模組化配置管理\n */\n\nimport { defineStore } from 'pinia';\n\nexport const useDefineStore = defineStore('define', {\n  state: () => ({\n    // 🗺️ 當前選中的底圖類型（Google 衛星圖）\n    selectedBasemap: 'google_satellite',\n\n    // 🗺️ 地圖視圖狀態\n    mapView: {\n      center: [41.4036, 2.1744], // 地圖中心點 [緯度, 經度] - 巴塞隆納聖家堂\n      zoom: 18, // 縮放等級（調整到18級，顯示聖家堂建築細節）\n    },\n    // 🗺️ 底圖配置列表（Google 衛星圖）\n    basemaps: [\n      {\n        label: 'Google Satellite',\n        value: 'google_satellite',\n        url: 'https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',\n      },\n    ],\n  }),\n  actions: {\n    /**\n     * 🗺️ 設定選中的底圖\n     * @param {string} value - 底圖類型值\n     */\n    setSelectedBasemap(value) {\n      this.selectedBasemap = value;\n    },\n\n    /**\n     * 🗺️ 設定地圖視圖狀態\n     * @param {Array} center - 地圖中心點 [緯度, 經度]\n     * @param {number} zoom - 縮放級別\n     */\n    setMapView(center, zoom) {\n      this.mapView.center = center;\n      this.mapView.zoom = zoom;\n    },\n  },\n});\n","import { render } from \"./MapTab.vue?vue&type=template&id=7b1eb05e\"\nimport script from \"./MapTab.vue?vue&type=script&lang=js\"\nexport * from \"./MapTab.vue?vue&type=script&lang=js\"\n\nimport \"./MapTab.vue?vue&type=style&index=0&id=7b1eb05e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HomeView.vue?vue&type=template&id=b45ac0d0\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=b45ac0d0&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * 🚀 Vue Router 路由配置\n *\n * 長照空間分析系統的路由管理\n * 使用 Vue Router 4 進行單頁應用程式路由控制\n *\n * @author 長照空間分析團隊\n * @version 1.0.0\n */\n\nimport { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\n\n/**\n * 📍 路由配置陣列\n * 定義應用程式的所有路由規則\n */\nconst routes = [\n  {\n    path: '/', // 🏠 根路徑\n    name: 'Home', // 路由名稱\n    component: HomeView, // 對應的 Vue 組件\n  },\n];\n\n/**\n * 🛣️ 路由器實例創建\n *\n * 配置說明：\n * - history: 使用 HTML5 History API 模式\n * - base: 設定應用程式的基礎路徑為 '/30DayMapChallenge-03_Polygons/'\n * - routes: 路由配置陣列\n */\nconst router = createRouter({\n  history: createWebHistory('/30DayMapChallenge-03_Polygons/'),\n  routes,\n});\n\nexport default router;\n","/**\n * 🚀 應用程式主入口文件 (Main Application Entry Point)\n *\n * 本文件是整個 Vue.js 應用程式的啟動入口，負責初始化所有核心系統和第三方依賴。\n * 採用模組化設計，確保各系統間的依賴關係清晰明確。\n *\n * 📋 主要功能模組：\n * 1. 🎨 樣式系統初始化 - Bootstrap 5 + 自定義主題 + 第三方 UI 庫樣式\n * 2. 🧩 Vue 3 應用程式核心 - 使用 Composition API 的現代化 Vue 架構\n * 3. 🗺️ 路由系統配置 - Vue Router 4 單頁應用程式導航管理\n * 4. 📦 狀態管理系統 - Pinia 全域狀態管理和數據持久化\n * 5. 🌍 DOM 掛載與渲染 - 將應用程式掛載到 HTML 容器中\n * 6. 🔧 第三方庫整合 - Leaflet 地圖、Font Awesome 圖示、Bootstrap 組件\n *\n * 🏗️ 技術架構：\n * - Vue 3.3+ (Composition API + <script setup> 語法)\n * - Vue Router 4 (聲明式路由配置)\n * - Pinia 2+ (輕量級狀態管理，替代 Vuex)\n * - Bootstrap 5.3+ (響應式 UI 框架)\n * - Leaflet 1.9+ (開源地圖庫)\n * - Font Awesome 6+ (向量圖示庫)\n *\n * 🔄 初始化流程：\n * 1. 載入所有必要的樣式和 JavaScript 依賴\n * 2. 創建 Vue 應用程式實例\n * 3. 配置並註冊路由系統\n * 4. 配置並註冊狀態管理系統\n * 5. 將應用程式掛載到 DOM 元素\n * 6. 輸出初始化完成日誌\n *\n * 📁 相關文件：\n * - ./App.vue - 根組件\n * - ./router/index.js - 路由配置\n * - ./stores/ - Pinia 狀態管理模組\n * - ./assets/css/ - 自定義樣式文件\n */\n\n// 🔧 Vue 核心模組引入 (Vue Core Module Imports)\nimport { createApp } from 'vue';\nimport { createPinia } from 'pinia';\n\n// 🧩 應用程式組件引入 (Application Component Imports)\nimport App from './App.vue';\nimport router from './router';\n\n// 🎨 引入第三方樣式文件 (Import Third-Party Style Files)\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap 5 CSS 框架\nimport 'leaflet/dist/leaflet.css'; // Leaflet 地圖核心樣式\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // Font Awesome 圖示庫\n\n// 🎨 引入自定義樣式文件 (Import Custom Style Files)\nimport './assets/css/common.css'; // 共用樣式（已包含變數和主題配置）\n\n// ⚙️ 引入第三方 JavaScript 文件 (Import Third-Party JavaScript Files)\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'; // Bootstrap JS（含 Popper.js）\n// 提供下拉選單、模態框、工具提示等互動功能\n\n// 🐛 調試資訊輸出 (Debug Information Output)\nconsole.log('🎨 樣式文件載入完成');\n\n// 🚀 創建並配置 Vue 應用程式實例 (Create and Configure Vue Application Instance)\nconst app = createApp(App);\n\n// 📦 創建 Pinia 狀態管理實例 (Create Pinia State Management Instance)\nconst pinia = createPinia();\n\n// 🗺️ 註冊 Vue Router 路由系統 (Register Vue Router Navigation System)\napp.use(router);\n\n// 📦 註冊 Pinia 狀態管理系統 (Register Pinia State Management System)\napp.use(pinia);\n\n// 🌍 掛載應用程式到 DOM 元素 (Mount Application to DOM Element)\n// 將 Vue 應用程式掛載到 index.html 中 id=\"app\" 的元素上\napp.mount('#app');\n\n// 🐛 應用程式啟動完成的調試資訊 (Application Startup Debug Information)\nconsole.log('🚀 空間分析視覺化平台已啟動');\nconsole.log('📦 Pinia 狀態管理已初始化');\nconsole.log('🗺️ Vue Router 路由系統已就緒');\nconsole.log('🎨 Bootstrap 5 UI 框架已載入');\nconsole.log('🗺️ Leaflet 地圖庫已準備就緒');\nconsole.log('🔤 Font Awesome 圖示庫已載入');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_30DayMapChallenge_03_Polygons\"] = self[\"webpackChunk_30DayMapChallenge_03_Polygons\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8500); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_router_view","name","components","setup","isLoading","ref","loadingText","loadingProgress","showLoadingProgress","loadingSubText","__exports__","render","style","_component_MapTab","onMapReady","$setup","setMapInstance","currentCountry","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","countries","country","key","layerId","_normalizeClass","layerName","onClick","$event","navigateToCountry","_hoisted_7","mapContainerId","useDataStore","defineStore","COUNTRY_ZOOM_LEVEL","layers","groupName","groupLayers","center","zoom","findLayerById","group","value","layer","getAllLayers","allLayers","push","selectedFeature","setSelectedFeature","feature","mapInstance","map","countryId","countryLayer","console","error","setTimeout","log","lng","lat","targetCenter","optimalZoom","setView","animate","visibleLayers","computed","persist","useDefineStore","state","selectedBasemap","mapView","basemaps","label","url","actions","setSelectedBasemap","this","setMapView","props","type","String","default","emits","emit","dataStore","mapContainer","currentTileLayer","isMapReady","Math","random","toString","substr","isAnyLayerVisible","length","currentCountryInfo","l","find","createMap","rect","getBoundingClientRect","width","height","warn","L","zoomControl","attributionControl","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","on","handleZoomEnd","handleMoveEnd","getPane","zIndex","getZoom","getCenter","setBasemap","removeLayer","config","b","attribution","maxZoom","addLayer","highlightFeature","resetAllLayerStyles","_leaflet_id","properties","syncLayers","invalidateSize","initMap","attempts","maxAttempts","tryCreateMap","resizeObserver","resizeTimeout","setupResizeObserver","window","ResizeObserver","clearTimeout","observe","onMounted","nextTick","onUnmounted","disconnect","remove","watch","deep","MapTab","c","routes","path","component","HomeView","router","createRouter","history","createWebHistory","app","createApp","App","pinia","createPinia","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}